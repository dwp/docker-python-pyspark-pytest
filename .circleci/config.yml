version: 2.1

orbs:
  snyk: snyk/snyk@0.0.8

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: dwpdigital/python3-pyspark-pytest
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  snyk-pr:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: 'docker build -t $IMAGE_NAME:latest .'
          name: Build Docker image
      - snyk/scan:
          organization: dwp-dataworks
          docker-image-name: '$IMAGE_NAME:latest'
          severity-threshold: high
          target-file: Dockerfile
          monitor-on-build: false
          project: '${CIRCLE_PROJECT_REPONAME}/pr-docker'
          fail-on-issues: false

  snyk-master:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: 'docker build -t $IMAGE_NAME:latest .'
          name: Build Docker image
      - snyk/scan:
          organization: dwp-dataworks
          docker-image-name: '$IMAGE_NAME:latest'
          severity-threshold: high
          target-file: Dockerfile
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-docker'
          fail-on-issues: false

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            set -u
            set +o pipefail
            LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
            set -o pipefail
            read MAJOR MINOR PATCH \<<< $( echo $LATEST_VERSION | awk -F '[ .]' '{maj = $1+0; min = $2+0; patch = $3+0; print maj, min, patch}' )
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$MAJOR
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$MAJOR.$MINOR
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$MAJOR.$MINOR.$PATCH
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$MAJOR
            docker push $IMAGE_NAME:$MAJOR.$MINOR
            docker push $IMAGE_NAME:$MAJOR.$MINOR.$PATCH

  publish-github-release:
    docker:
    - image: cibuilds/github:0.10
    steps:
    - attach_workspace:
        at: ./artifacts
    - run:
        name: Publish Release on GitHub
        command: |
          set -u
          set +o pipefail
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          set -o pipefail
          [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
          VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo ${VERSION} > VERSION
          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./VERSION

workflows:
  version: 2
  build-and-deploy:
    jobs:
    - build
    - snyk-pr:
        requires:
          - build
        filters:
          branches:
            ignore: master
    - snyk-master:
        requires:
          - build
        filters:
          branches:
            only: master
    - publish-github-release:
        requires:
        - build
        filters:
          branches:
            only: master
    - publish-latest:
        requires:
          - build
          - publish-github-release
        filters:
          branches:
            only: master
